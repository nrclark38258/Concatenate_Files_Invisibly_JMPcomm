# lot RDP3, thru 10:
CRP = read.csv(file="R:/nextlab2/Nate's folder/Catalyst Dx algorithms/CRP curve fitting/data/CRP_lotRDP3_thru10.csv", head=TRUE, sep=",")
X = CRP[,1]
Y = CRP[,2]
# plot our data in R
plot(X, Y, col="black", main="CRP panel data lot RDP3")

# now for minpack.lm() Levenburg-Marquardt implementation:
require("minpack.lm")
parStart = list(a = 9, b = -60, c = 188, d = -100)
expTransform = function(parS, xx) (parS$a + (parS$b * exp(xx)) + (parS$c * exp(xx^2)) + (parS$d * exp(xx^3)))
residFun = function(params, yy, xx) yy - expTransform(params, xx)
nls.out = nls.lm(par=parStart, fn = residFun, xx = X, yy = Y)
#nls.out = nls.lm(par=parStart, fn = residFun, xx = X, yy = Y, control = nls.lm.control(nprint = 1)) # setting nprint to positive val will print out iterations.

#now plot our fit line to the data:
lines(X, expTransform(as.list(coef(nls.out)), X), col="red")  # plot the prediction line on the experimental values

# get the coefficients, our primary objective:
summary(nls.out) 