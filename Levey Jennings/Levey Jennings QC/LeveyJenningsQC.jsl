//Author(s)
//NClark
//IDEXX Laboratories, Inc.
//Westbrook, ME 04092

//Script takes IRL SDMA QC data and creates Levey-Jennings plots

//------------------Revision History for both script and Help File--
//
//	1.3 NClark 091516
//		-> Updated startaxis logic to work backward across months
//	1.2 NClark 090916
//		-> Smartly adjusts Xaxis to show 2 weeks worth of data
//	1.1 NClark 090716
//		-> Commented out HTML saving (taking way to long in JSL)
//	1.0 NClark 090716
//		-> First official release
//		-> Removed collection of username
//		-> Updated folder for HTML saving
//		-> Added variables for custom axes
//		-> Updated HTML file name to be LeveyJennings_-date-.HTM
//		-> Removed journaling of data
//	BETA1 NClark 082616
//		-> 1st version released for testing
//		-> User picks file location for data and limits
//		-> HTM file saved to desktop location (will be adjusted later)
//------------------------------------------------------------------

//File locations
//Eventually hard colded
/*startFileLoc = "R:\Systems_Chemistry_Engineering\Assay Development\SDMA\NRC-00154_072816_LeveyJennings Script work\NEW CURRENT SDMA QC lot DM589.xlsx";*/

/*limitFileLoc = "R:\Systems_Chemistry_Engineering\Assay Development\SDMA\NRC-00154_072816_LeveyJennings Script work\QC Spec limits_DM589.jmp";*/

//htmlFileLoc = "\\FOGHORN\Groups\IVS Quality\SDMA\Accuracy Team\SDMA Daily QC Levey Jennings Charts\";
htmlFileLoc = "C:\Users\nclark\Desktop\LJ Tests\";

// QC Axis settings
qc1YaxisLo = 8;
qc1YaxisHi = 22;
qc2YaxisLo = 45;
qc2YaxisHi = 80;

//Sets up MMDDYYYY date for File Naming
todayDate=Short Date( Today() );
newTodayDate = Munger(todayDate,1,"/","");
nextTodayDate = Munger(newTodayDate,1,"/","");

//Uses above date to create rolling axis (~14 days data)
startDate = Short Date( Today() - In Days( 14 ) );
startDayOfWk = Day Of Week( Today() - In Days( 14 ) );
startDateMon = Word( 1, startDate, "/" );
startDateDay = Word( 2, startDate, "/" );
startDateYr = Word( 3, startDate, "/" );
startDateNum = DateMDY(Num(startDateMon),Num(startDateDay),Num(startDateYr));

If( startDayOfWk == 1 | startDayOfWk == 2,
       dayOffset = 0;
       startAxis = Num(Date Increment(startDateNum,"Day",-dayOffset));
,
       dayOffset = startDayOfWk - 2;
       startAxis = Num(Date Increment(startDateNum,"Day",-dayOffset));
);

//User picks one file with begining data
startFileLoc = Pick File(
	,
	,
	{"All Files|*", "JMP Files|jmp;jsl;jrn"},
	1,
	0,
	,
	//Multiple
);

////opens chosen file with some specifics based on known data organization
//dt = Open(
//	startFileLoc,
//	Worksheets( "Raw QC Data" ),
//	Concatenate Worksheets( 0 ),
//	Create Concatenation Column( 0 ),
//	Worksheet Settings(
//		1,
//		Has Column Headers( 0 ),
//		//Number of Rows in Headers( 1 ),
//		//Headers Start on Row( 7 ),
//		Data Starts on Row( 1 ),
//		Data Starts on Column( 1 ),
//		Data Ends on Row( 0 ),
//		Data Ends on Column( 0 ),
//		Replicated Spanned Rows( 1 ),
//		Replicated Spanned Headers( 0 ),
//		Suppress Hidden Rows( 1 ),
//		Suppress Hidden Columns( 1 ),
//		Suppress Empty Columns( 1 ),
//		Treat as Hierarchy( 0 ),
//		Multiple Series Stack( 0 ),
//		Import Cell Colors( 0 ),
//		Limit Column Detect( 0 ),
//		Column Separator String( "-" )
//	)
//);

//Locates the row which contains header information
//findStart = Column(dt,1)<<getasmatrix;
//rowStart = Contains(findStart,"Entry #");

/*//Moves header information into column headers
colMtrx={};
For(i=1,i<=ncol(dt),i++,
	colMtrx[i]=Column(dt,i)<<getasmatrix;
	Column(dt,i)<<Setname(colMtrx[i][rowStart])
);
Column(dt,7)<<Setname("Calibration Date");*/

/*//Removes any additional columns
If(ncol(dt)>7,
	colNum=ncol(dt);
	For(i=8,i<=colNum,i++,
		dt<<DeleteColumns(8)
	)
);*/

/*//Adds columns for metadata from excel column A
For(i=1,i<=2,i++,
	dt<<new column(colMtrx[1][i],Formula(colMtrx[2][i]));
	Column(dt,colMtrx[1][i])<<DeleteFormula;
	
);*/
/*
//Deletes all rows up until data
dt<<DeleteRows(1::rowStart);
dt<<SelectWhere(IsMissing(:Lab_Instrument Name))<<DeleteRows;*/

//fixed columns to be correct data/modeling type
Column(dt,"QC 1")<<DataType(Numeric);
Column(dt,"QC 1")<<ModelingType(Continuous);
Column(dt,"QC 2")<<DataType(Numeric);
Column(dt,"QC 2")<<ModelingType(Continuous);

//Obtains lot #
lotNum = :Name("QC Lot #:")[1];

//selects any comments making points red
//selects any comments referencing recalibration and marks them asterisks
dt<<selectwhere(!IsMissing(:Comments))<<colors("Red");
dt<<selectwhere(Contains(:Comments,"cal") > 0 & !IsMissing(:Calibration Date))<<Markers(11)<<colors("Red");
dt<<clearselect;

dt<<Newcolumn("Numeric Date",
	Formula(:Date)
);
Column(dt,"Numeric Date")<<deleteformula;
Column(dt,"Numeric Date")<<DataType(Numeric);
Column(dt,"Numeric Date")<<ModelingType(Continuous);


//Sets up axes settings for 2 weeks data
//Axis is in points, not date ... need number of points for given date range
summarize(dt, lab = By(:Lab_Instrument Name), items = count(:Numeric Date));//summarized data for count of points per lab/instrument
//show(lab, items);

dt<<selectwhere(:Numeric Date >= startAxis);//selects and then subsets all data from today back 2 weeks
dtSub = dt<<Subset(selected rows(1),selected columns(0),private);
dt << Select All Rows;
dt << Invert Row Selection;

summarize(dtSub, labSub = By(:Lab_Instrument Name), itemsSub = count(:Numeric Date));//summarized subset data for count per lab instrument
//show(labSub,itemsSub);
close(dtSub,nosave);

//Creates master list per lab/instrument total points for axis
//Max is total points per lab/instrument (plus 0.5 for buffer)
//Min is total points - points over last two weeks (plus 0.5 for buffer)
masterList = {};
For(i = 1, i<=nitems(lab), i++,
	If(Contains(labSub,lab[i]) != 0,
		miniList = {};
		subIndex = Contains(labSub,lab[i]);
		maxValue = items[i] + 0.5;
		minValue = (items[i] - itemsSub[subIndex]) + 0.5;
		InsertInto(miniList,lab[i]);
		InsertInto(miniList,minValue);
		InsertInto(miniList,maxValue);
		masterList[i] = miniList;
	,
		miniList = {};
		maxValue = items[i] + 0.5;
		minValue = items[i] - 0.5; //end graph will show no points
		InsertInto(miniList,lab[i]);
		InsertInto(miniList,minValue);
		InsertInto(miniList,maxValue);
		masterList[i] = miniList;
	)
);
//show(masterList);

//user chooses file with LJ limits and opens privately
limitFileLoc = Pick File(
	,
	,
	{"All Files|*", "JMP Files|jmp;jsl;jrn"},
	1,
	0,
	,
	//Multiple
);
dtLimit = Open(limitFileLoc,private);

//creates a list of lists for all data in table
limitList = {};
For(i=1,i<=ncol(dtLimit),i++,
	limitList[i] = Column(dtLimit,i)<<get values;
);
Close(dtLimit,nosave);

//sets location of values in table
kSigLoc = Contains(limitList[1],"_KSigma");
alphaLoc = Contains(limitList[1],"_Alpha");
stDevLoc = Contains(limitList[1],"_Std Dev");
meanLoc = Contains(limitList[1],"_Mean");
lclLoc = Contains(limitList[1],"_LCL");
uclLoc = Contains(limitList[1],"_UCL");

//creates control chart of data, journaling the result
ctrlChrt = dt << Control Chart(
	Sample Label( :Date ),
	KSigma( limitList[2][kSigLoc] ),
	Chart Col(
		:QC 1,
		Levey Jennings(
			Rule 1 3S( 1 ),
			Rule 2 2S( 1 ),
			Rule R 4S( 1 ),
			Rule 4 1S( 1 ),
			Rule 10 X( 1 ),
			Sigma( limitList[2][stDevLoc] ),
			Avg( limitList[2][meanLoc] ),
			LCL( limitList[2][lclLoc] ),
			UCL( limitList[2][uclLoc] )
		)
	),
	Chart Col(
		:QC 2,
		Levey Jennings(
			Rule 1 3S( 1 ),
			Rule 2 2S( 1 ),
			Rule R 4S( 1 ),
			Rule 4 1S( 1 ),
			Rule 10 X( 1 ),
			Sigma( limitList[3][stDevLoc] ),
			Avg( limitList[3][meanLoc] ),
			LCL( limitList[3][lclLoc] ),
			UCL( limitList[3][uclLoc] )
		)
	),
	SendToReport(
		//Dispatch(
		//	{"Levey Jennings of QC 1"},
		//	"1",
		//	ScaleBox,
		//	{Min( startAxis )/* Inc( 2 ), Minor Ticks( 1 )*/}
		//),
		Dispatch(
			{"Levey Jennings of QC 1"},
			"2",
			ScaleBox,
			{Min( qc1YaxisLo ), Max( qc1YaxisHi ), Inc( 2 ), Minor Ticks( 1 )}
		),
		Dispatch(
			{"Levey Jennings of QC 1"},
			"Levey Jennings Chart",
			FrameBox,
			{Frame Size( 509, 272 ), Marker Size( 5 )}
		),
		Dispatch(
			{"Levey Jennings of QC 1"},
			"Levey Jennings Chart",
			FrameBox( 2 ),
			{Frame Size( 509, 272 )}
		),
		Dispatch(
			{"Levey Jennings of QC 2"},
			"2",
			ScaleBox,
			{Min( qc2YaxisLo ), Max( qc2YaxisHi ), Inc( 5 ), Minor Ticks( 1 )}
		),
		Dispatch(
			{"Levey Jennings of QC 2"},
			"Levey Jennings Chart",
			FrameBox,
			{Frame Size( 509, 272 ), Marker Size( 5 )}
		),
		Dispatch(
			{"Levey Jennings of QC 2"},
			"Levey Jennings Chart",
			FrameBox( 2 ),
			{Frame Size( 509, 272 )}
		)
	),
	by(
		:Lab_Instrument Name
	)
);

//Adjusts graph Axes based on points for a 2 week period
For(i=1,i<=nitems(ctrlChrt),i++,
	labTitle = report(ctrlChrt[i])[outline box(1)] << get title;
	If(Contains(labTitle,masterlist[i][1]) != 0,
		report(ctrlChrt[i])[axisbox(2)]<< Axis Settings(Min(masterList[i][2]),Max(masterList[i][3]));
	);
);

//ctrlChrt<<Journal;

/* Remove saving until JMP finds way for it to be quicker
//filename for HTML File and creating the HTML file
//note that report is many control charts, the parent is necessary so the HTML file isn't just one control chart
fileName = "Levey Jennings" || "_" || nextTodayDate || ".html";
(ctrlChrt<<Parent)<<Save Interactive HTML(htmlFileLoc || fileName)


