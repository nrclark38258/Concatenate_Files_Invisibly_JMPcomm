//Author(s)
//NClark
//IDEXX Laboratories, Inc.
//Westbrook, ME 04092

//Removes duplicates from a data set

//------------------Revision History for both script and Help File--
//
//	2.0 NClark 082917
//		-> Shamlessly stole code from JMP community to more elegantly handle duplicate removal
//		-> Uses ColMin to recognize row #s of unique entries so non-unique entries have min row of entry that came before
//		-> Dialog says how many rows were deleted
//	1.2	NClark 062916
//		-> Updated to convert main table into linked subset which is sorted and rows selected
//			-> rows then deleted from original table w/o having affecting sort of original table
//	1.1 NClark 052416
//		-> Changed 'getasmatrix' to getallcolumnsasmatrix
//			-> handles character colummns as well as numeric
//	1.0 NClark 050216
//		-> First version released
//------------------------------------------------------------------

Names Default To Here( 1 );

dt_input = currentdatatable();
//dt_sub = dt_input << Subset( All rows, Selected columns only( 0 ), Linked, invisible );
/*
colList = {};
For(k=1,k<=ncol(dt_sub),k++,
	Insertinto(colList, Column(dt_sub,k)<<getname())
);

dt_sub<<Sort(By(eval(colList)),ReplaceTable(1));
mtrx = dt_sub<<getallcolumnsasmatrix;

For( i = 1, i <= N Row( dt_input ) - 1, i++,
	If( Contains( mtrx[i, 0] == mtrx[i + 1, 0], 0 ) != 0,
		,
		Row State( i ) = Selected State( 1 )
	)
);
dt_input << deleterows();
Close(dt_sub,nosave);
*/

col_min = Parse( "Col Min( Row(), :Name(\!"" || Concat Items( dt_input << get column names( string ), "\!"), :Name(\!"" ) || "\!"))" );
duplicates = [];
For Each Row( If( col_min != Row(), duplicates |/= Row() ) );
dt_input << delete rows( duplicates );
nn = N Rows( duplicates );

New Window( "Delete Duplicate Rows", <<Modal, Text Box( Concat( "Done.  Deleted ", Char( nn ), " duplicate rows." ) ), Text Box( "" ), Button Box( "OK" ) );