Names Default To Here( 1 );

dataTablePath = "$USER_APPDATA\com.jmp.juchil.buildaddins.jmp";

JmpMajorVersion = Num( Word( 1, JMP Version(), "." ) );

buildAddin = Function( {entry},
	inputFolder = Char( Column( dt, 2 )[entry][1] );
	addinFile = Char( Column( dt, 3 )[entry][1] ) || Char( Column( dt, 1 )[entry][1] ) || ".jmpaddin";
	
	zipFolder(inputFolder,addinFile,1,1);
	
);

zipFolder = Function( {folderToZip, zipFileLoc, overwriteFile = 0, recursive = 1},
	{Default Local}, 
	
	If( Host is( "Windows" ),
		folderToZip = Convert File Path( folderToZip, "Windows" );
		zipFileLoc = Convert File Path( zipFileLoc, "Windows" );
		If( Substr( folderToZip, -1 ) != "\",
			folderToZip = Concat( folderToZip, "\" )
		);
	,
		folderToZip = Convert File Path( folderToZip, "Mac" );
		zipFileLoc = Convert File Path( zipFileLoc, "Mac" );
		If( Substr( folderToZip, -1 ) != "/",
			folderToZip = Concat( folderToZip, "/" )
		);
	);
	
	If(
		File Exists( zipFileLoc ) & overwriteFile == 0,
			Print( "File already exists" );
			Return( 0 );,
		File Exists( zipFileLoc ) & overwriteFile == 1,
			Delete File( zipFileLoc ),
	);
	
	za = Open( zipFileLoc, zip );
	
	If( recursive == 1,
		dirlist = Files In Directory( folderToZip, "recursive" ),
		dirlist = Files In Directory( folderToZip )
	);	
		
	For( i = 1, i <= N Items( dirlist ), i++, 
		
		tmpBlob = Load Text File( folderToZip || dirlist[i], blob );

		za << Write( dirlist[i], tmpBlob );
	);
);

updateTableBox = Function( {},
	nameList = Column( dt, 1 ) << Get Values;
	sourceList = Column( dt, 2 ) << Get Values;
	destList = Column( dt, 3 ) << Get Values;
	
	nameSCB << set values( nameList );
	sourceSCB << set values( sourceList );
	destSCB << set values( destList );
);

createNewEntry = Function( {},
	toggleEnabled( 1 );
	
	dt << AddRows( 1 );
	dt << save;
	updateTableBox();
	numRows = Matrix( N Row( dt ) );
	tb << Set Selected Rows( numRows );
);

removeEntry = Function( {},
	rowMatrix = tb << get Selected rows;
	If( N Rows( rowMatrix ) == 0,
		Return( 0 )
	);
	
	dt << delete rows( rowMatrix );
	dt << save;
	updateTableBox();
	tb << set selected rows( [] );
	clearTEBs();
	toggleEnabled( 0 );
);

saveEntry = Function( {},
	rowMatrix = tb << get Selected rows;
	If( N Rows( rowMatrix ) == 0,
		Return( 0 ),
		row = rowMatrix[1]
	);
	Column( dt, 1 )[row] = nameTEB << Get Text;
	Column( dt, 2 )[row] = sourceTEB << Get Text;
	Column( dt, 3 )[row] = destTEB << Get Text;
	dt << Save;
	updateTableBox();
);

createTable = Function( {},
	If( !File Exists( dataTablePath ),
		dt = New Table( "com.jmp.juchil.buildaddins",
			"private",
			New Column( "AddinName", "Character" ),
			New Column( "AddinSourceFolder", "Character" ),
			New Column( "AddinDestinationFolder", "Character" ),

		);
		dt << Save( dataTablePath );
	,
		dt = Open( dataTablePath, "private" )
	)
);

clearTEBs = Function( {},
	nameTEB << Set Text( "" );
	sourceTEB << Set Text( "" );
	destTEB << Set Text( "" );
);

onRowChange = Function( {},
	//{rowMatrix, row}, 
	
	rowMatrix = tb << get Selected rows;
	If( N Rows( rowMatrix ) == 0,
		clearTEBs();
		toggleEnabled( 0 );
		Return( 0 );
	,
		toggleEnabled( 1 );
		row = rowMatrix[1];
		
		If( N Rows( rowMatrix ) > 1,
			tb << set selected rows( Matrix( row ) )
		);
		
	);
	
	nameTEB << Set Text( Column( dt, 1 )[row] );
	sourceTEB << Set Text( Column( dt, 2 )[row] );
	destTEB << Set Text( Column( dt, 3 )[row] );
	
	nameTEB << Set Tip( Column( dt, 1 )[row] );
	sourceTEB << Set Tip( Column( dt, 2 )[row] );
	destTEB << Set Tip( Column( dt, 3 )[row] );
);

openSelectedDirectory = Function( {type},
	{colIndex, dir},
	colIndex = If( type == "source", 2, 3 );
	dir = Column( dt, colIndex )[(tb << Get Selected Rows)[1]];
	If( Host is( "Windows" ),
		Try( Open( dir ) ),
		If( Directory Exists( dir ),
			rp = RunProgram(
				Executable( "/usr/bin/open" ),
				Options( dir ),
				ReadFunction( "text" )
			)
		)
	);
);

installSelected = Function( {},
	Try( Open( Column( dt, 3 )[(tb << Get Selected Rows)[1]] || Column( dt, 1 )[(tb << Get Selected Rows)[1]] || ".jmpaddin" ) )
);

pickADirectory = Function( {teb},
	currDir = teb << Get Text();
	If( Directory Exists( currDir ),
		newDir = Pick Directory( "Choose a Directory", currDir ),
		newDir = Pick Directory( "Choose a Directory" )
	);
	If( newDir == "",
		Return( currDir ),
		If( Host is( "Windows" ),
			Return( Convert File Path( newDir, "Windows" ) ),
			Return( Convert File Path( newDir, "Mac" ) )
		)
	);
);

toggleEnabled = Function( {val},
	{enableList,i},
	If( JmpMajorVersion >= 13,
		infoPB << Enabled( val );
		actionsPB << Enabled( val );
		If( val == 1,
			sourceTEB << Enable( 0 );
			destTEB << Enable( 0 );
		,
			sourceTEB << Enable( 1 );
			destTEB << Enable( 1 );
			sourceTEB << Enabled( 0 );
			destTEB << Enabled( 0 );
		);
		enableList = {save_btn,remove_btn};
	,
		enableList = {
						build_btn, 
						source_btn, 
						dest_btn, 
						install_btn, 
						dirPickSource_btn,
						dirPickDest_btn, 
						nameTEB,
						save_btn,
						remove_btn
		};
		sourceTEB << Enable( 0 );
		destTEB << Enable( 0 );
	);
	For(i=1,i<=NItems(enableList),i++,
		Eval(enableList[i]) << Enable( val );
	);
);

folderIconName = "$ADDIN_HOME(com.jmp.juchil.buildaddins)/Folder.gif";

createTable();

nw = New Window( "Build Add-ins",
	Outline Box( "Build Add-ins",
		Border Box( Left( 5 ), Right( 5 ), Top( 5 ), Bottom( 5 ),
			H List Box(
				Panel Box( "Select Add-in",
					tb = Table Box(
						nameSCB = String Col Box( "Add-in Name", {}, Set Width( 150 ) ),
						sourceSCB = String Col Box( "Add-in Source Folder Path", {}, Set Width( 250 ) ),
						destSCB = String Col Box( "Add-in Destination Folder", {}, Set Width( 250 ) ), 
						<<Set Selectable Rows( 1 ),
						<<Set Row Change Function( onRowChange() )
					),
					Text Box( "" )
				),
				actionsPB = Panel Box( "Actions",
					Lineup Box( N Col( 1 ),
						build_btn = Button Box( "Build", buildAddin( tb << Get Selected Rows ) ),
						source_btn = Button Box( "Open Source", openSelectedDirectory("source") ),
						dest_btn = Button Box( "Open Dest", openSelectedDirectory("dest") ),
						install_btn = Button Box( "Install", installSelected() )
					)
				)
			)
		)
	),
	Outline Box( "Add/Edit Add-Ins",
		Border Box( Left( 5 ), Right( 5 ), Top( 5 ), Bottom( 5 ),
			H List Box(
				infoPB = Panel Box( "Add-In Information",
					Lineup Box( N Col( 3 ),
						V Center Box( Text Box( "Add-in Name" ) ),
						V Center Box( nameTEB = Text Edit Box( "", Set Width( 250 ) ) ),
						V Center Box( Text Box( "" ) ),
						V Center Box( Text Box( "Add-In Source Folder" ) ),
						V Center Box( sourceTEB = Text Edit Box( "", Set Width( 250 ) ) ),
						V Center Box(
							dirPickSource_btn = Button Box( "", sourceTEB << Set Text( pickADirectory(sourceTEB) ), Set Icon( folderIconName ) )
						),
						V Center Box( Text Box( "Add-In Destination Folder" ) ),
						V Center Box( destTEB = Text Edit Box( "", Set Width( 250 ) ) ),
						V Center Box(
							dirPickDest_btn = Button Box( "", destTEB << Set Text( pickADirectory(destTEB) ), Set Icon( folderIconName ) )
						),

					)
				),
				Panel Box( "Actions",
					Lineup Box( N Col( 1 ),
						new_btn = Button Box( "New", createNewEntry() ),
						save_btn = Button Box( "Save", saveEntry() ),
						remove_btn = Button Box( "Remove", removeEntry() )
					)
				)
			)
		)
	)
);

updateTableBox();
toggleEnabled( 0 );