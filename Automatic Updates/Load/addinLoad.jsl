//Author
//NClark
//IDEXX Laboratories, Inc.
//Westbrook, ME 04092

//Tool For Automatic Updates (Load Version)
//------------------Revision History for both script and Help File--
//
//	NClark 1.1 112916
//		-> Updated bugs that stopped script from working if all addins not installed and if two updates for one addin were present
//	NClark 1.0 080916
//		-> 1st version released
//------------------------------------------------------------------

eV = New Namespace( "existingVersion" );
nV = New Namespace( "newVersion" );
//If( !Namespace Exists( "existingVersion" ), eV = New Namespace( "existingVersion" ) );
//If( !Namespace Exists( "newVersion" ), nV = New Namespace( "newVersion" ) );
nV:flagPath = "$Addin_Home(com.idexx.nclark.automaticUpdates-unLoad)\flag.txt";
nV:flagPath2 = "$Addin_Home(com.idexx.nclark.automaticUpdates-unLoad)\flag2.txt";

nV:runLoad = Expr(
	u = Get Environment Variable("username");
	Set Path Variable("ADDIN_BASE","C:\Users\" || u || "\AppData");

	nV:installPath = "\\FOGHORN\Groups\JMP User Group\JMP Addins\";

	nV:newVerList = {};
	nV:updateList = {};
	nV:chgLogList = {};
	nV:updateListNoDupe = {};
	nv:chgLogListNoDupe = {};
	nV:chgLogTxt = {};
	nV:chosen = {};
	nV:versionList2 = {};
	nV:installFileList = {};

	//Includes existingVersion list
	Try(
		Include("$ADDIN_BASE/existingAddinVersions.jsl")
		//Throw();
	);
	//show("worked");
	//Tries to include network newVersion list
	Try(
		Include(nV:installPath || "00-AddinNewVersionList.jsl"),
		Throw()
	);
	/*Try(
		Include("R:\Systems_Chemistry_Engineering\Tools\Official JMP Addin Development\Official JMP Addin Working\00-AddinNewVersionList.jsl"),
		Throw()
	);*/
	//show(eV:versionList);

	//stop = 0;
	For(i=1,i<=nitems(nV:versionList),i++,
		stop = 0;
		For(j=1, j<=nitems(eV:versionList), j++,
			If( nV:versionList[i][1] == eV:versionList[j][1],
				//Show( i, j, nV:versionList[i][1], ev:versionList[j][1], "yes" );
				Break();
			,
				If(j + 1 > nitems(eV:versionList), stop = 1 );
				//Show( i, j, nV:versionList[i][1], ev:versionList[j][1], "no" )
//ADD IF AND CATCH IN CASE 'TRACKED' ADDIN NOT ALREADY INSTALLED
			)
		);
		If(stop == 1, print("broke")
		,
			nV:versionList[i][2] > eV:versionList[j][2], 
			InsertInto(nV:newVerList,i);
			//Show("new version detected")
		,
			//Show("All good!")
		)
	);
	
	If(nItems(nV:newVerList) == 0,Throw());

	For(k=1,k<=nitems(nV:newVerList),k++,
		InsertInto(nV:updateList,nV:versionList[nV:newVerList[k]][3]);
		InsertInto(nV:chgLogList,Char(nV:versionList[nV:newVerList[k]][5]));
		//Show(nV:versionList[k][1])
	);
	//InsertInto(updateList,"Select All",1);
	//show(nV:updateList,nV:chgLogList);

	For(i=1,i<=nitems(nV:updateList),i++,
		If(Contains(nV:updateListNoDupe,nV:updateList[i]) == 0,
			InsertInto(nV:updateListNoDupe,nV:updateList[i])
		)
	);
	//show(nV:updateListNoDupe);
	For(i=1,i<=nitems(nV:chgLogList),i++,
		If(Contains(nV:chgLogListNoDupe,nV:chgLogList[i]) == 0,
			InsertInto(nV:chgLogListNoDupe,nV:chgLogList[i])
		)
	);
	//show(nV:chgLogListNoDupe);

	For(i=1, i<=nitems(nV:chgLogListNoDupe),i++,
		nV:chgLogTxt[i] = evalInsert("ButtonBox(\!"^nV:updateListNoDupe[i]^\!","||Parse(nV:chgLogListNoDupe[i])||",<<underlinestyle)")
	);
	//show(nV:chgLogTxt);
	nV:chgLogString = "VListBox( Textbox(\!"Change Logs\!"),"||ConcatItems(nV:chgLogTxt, ",")||")";
	//show(nV:chgLogString);

	nV:checkboxExpr = Expr(
		HListBox(	
			VlistBox(
				nV:chooseAll = Check Box(
					{"All"},
					<<setFunction(
						Function( {this, button},
							If( (this << get( 1 )) == 1,
								nV:choose << Set All( 1, Run Script( 1 ) );
								For(k=1, k<=nitems(nV:updateListNoDupe),k++,
									nV:choose << EnableItem( k, 0 );
								)
							,
								nV:choose << Set All( 0, Run Script( 1 ) );
								For(k=1, k<=nitems(nV:updateListNoDupe),k++,
									nV:choose << EnableItem( k, 1 );
								)
							)
						)
					)
				),
				nV:choose = CheckBox(nV:updateListNoDupe,nV:chosen = nV:choose<<getselected()),
			)
		)
	);
	InsertInto(nV:checkBoxExpr,Parse(nV:chgLogString));
	//show(nV:checkBoxExpr);
	
	
	nV:sched = Schedule(
		2.5,
		Try( nV:nw << Bring Window to Front );
		nV:sched << close;
	);
	Report( nV:sched ) << Show Window( 0 );
	
	nV:nw = New Window("Select Updates",
		//<<modal,
		Show Menu( 0 ),
		Show Toolbars( 0 ),
		VListBox(
			HListBox(
				eval(nV:checkBoxExpr)
			),
			HListBox(
				ButtonBox("AssayDev Version Tracking",Open("\\FOGHORN\Groups\JMP User Group\JMP Addins\Assay Development_Developers Only\AssayDev_Version Tracking.pdf"),<<underlinestyle),
				ButtonBox("OK",nv:nw<<closewindow;eval(complete))
			)
		)
	);
	nV:nw<<MoveWindow( 500, 500 );
	//show(nV:chosen);

	complete=expr(
		For(k=1,k<=nitems(nV:versionList),k++,
			InsertInto(nV:versionList2,nV:versionList[k][3])
		);

		For(j=1,j<=nitems(nV:chosen),j++,
			nV:position = Contains(nV:versionList2,nV:chosen[j]);
			InsertInto(nV:installFileList,nV:versionList[nV:position][4]);
			show(nV:position)
		);
		//show(nV:installFileList);

		For(l=1,l<=nitems(nV:installFileList),l++,
			Open(nV:installPath || nV:installFileList[l])
		);
	);
);

If( File Exists( nV:flagPath ) & File Exists(nV:flagPath2),
	DeleteFile(nV:flagPath);
	Throw();
/*,
	!File Exists( nV:flagPath ) & !File Exists(nV:flagPath2),
	Save Text File( nV:flagPath, "" );
	Save Text File( nV:flagPath2, "" );
	Throw();
,
	File Exists( nV:flagPath ) & File Exists(nV:flagPath2),
	Throw();*/
,
	Eval(nV:runLoad)
);
